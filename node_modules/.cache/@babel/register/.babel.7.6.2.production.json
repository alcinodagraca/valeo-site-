{
  "{\"sourceRoot\":\"/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final\",\"filename\":\"/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"production\",\"root\":\"/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.2:production": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final",
      "filename": "/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "production",
      "root": "/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final/gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.build = exports.dev = exports.watch = exports.copy = exports.images = exports.styles = exports.clean = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpPlumber = _interopRequireDefault(require(\"gulp-plumber\"));\n\nvar _gulpLess = _interopRequireDefault(require(\"gulp-less\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PRODUCTION = _yargs.default.argv.prod;\nvar paths = {\n  styles: {\n    src: \"src/assets/styles/bundle.less\",\n    dest: \"dist/assets/styles/\"\n  },\n  scripts: {\n    src: \"src/assets/scripts/**/*.js\",\n    dest: \"dist/assets/scripts/\"\n  },\n  images: {\n    src: \"src/assets/images/**/**/*.{jpg,jpeg,png,svg,gif}\",\n    dest: \"dist/assets/images/\"\n  },\n  others: {\n    src: [\"src/assets/**/*\", \"!src/assets/{images/scripts,styles}\", \"!src/assets/{images/scripts,styles}/**/*\"],\n    dest: \"dist/assets\"\n  }\n};\n\nvar clean = function clean(done) {\n  return (0, _del.default)([\"dist\"]);\n  done();\n};\n\nexports.clean = clean;\n\nvar styles = function styles() {\n  return _gulp.default.src(paths.styles.src).pipe((0, _gulpIf.default)(!PRODUCTION, _gulpSourcemaps.default.init())).pipe((0, _gulpPlumber.default)()).pipe((0, _gulpLess.default)()).pipe((0, _gulpIf.default)(PRODUCTION, (0, _gulpCleanCss.default)({\n    compatibility: \"ie8\"\n  }))).pipe((0, _gulpIf.default)(!PRODUCTION, _gulpSourcemaps.default.write())).pipe(_gulp.default.dest(paths.styles.dest));\n};\n\nexports.styles = styles;\n\nvar images = function images() {\n  return _gulp.default.src(paths.images.src).pipe((0, _gulpIf.default)(PRODUCTION, (0, _gulpImagemin.default)())).pipe(_gulp.default.dest(paths.images.dest));\n};\n\nexports.images = images;\n\nvar copy = function copy() {\n  return _gulp.default.src(paths.others.src).pipe(_gulp.default.dest(paths.others.dest));\n};\n\nexports.copy = copy;\n\nvar watch = function watch() {\n  _gulp.default.watch(\"src/assets/styles/**/*.less\", styles);\n\n  _gulp.default.watch(paths.images.src, images);\n\n  _gulp.default.watch(paths.others.src, copy);\n};\n\nexports.watch = watch;\n\nvar dev = _gulp.default.series(clean, _gulp.default.parallel(styles, images, copy), watch);\n\nexports.dev = dev;\n\nvar build = _gulp.default.series(clean, _gulp.default.parallel(styles, images, copy));\n\nexports.build = build;\nvar _default = dev;\nexports.default = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbIlBST0RVQ1RJT04iLCJ5YXJncyIsImFyZ3YiLCJwcm9kIiwicGF0aHMiLCJzdHlsZXMiLCJzcmMiLCJkZXN0Iiwic2NyaXB0cyIsImltYWdlcyIsIm90aGVycyIsImNsZWFuIiwiZG9uZSIsImd1bHAiLCJwaXBlIiwic291cmNlbWFwcyIsImluaXQiLCJjb21wYXRpYmlsaXR5Iiwid3JpdGUiLCJjb3B5Iiwid2F0Y2giLCJkZXYiLCJzZXJpZXMiLCJwYXJhbGxlbCIsImJ1aWxkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxVQUFVLEdBQUdDLGVBQU1DLElBQU4sQ0FBV0MsSUFBOUI7QUFFQSxJQUFNQyxLQUFLLEdBQUc7QUFDWkMsRUFBQUEsTUFBTSxFQUFFO0FBQ05DLElBQUFBLEdBQUcsRUFBRSwrQkFEQztBQUVOQyxJQUFBQSxJQUFJLEVBQUU7QUFGQSxHQURJO0FBS1pDLEVBQUFBLE9BQU8sRUFBRTtBQUNQRixJQUFBQSxHQUFHLEVBQUUsNEJBREU7QUFFUEMsSUFBQUEsSUFBSSxFQUFFO0FBRkMsR0FMRztBQVNaRSxFQUFBQSxNQUFNLEVBQUU7QUFDTkgsSUFBQUEsR0FBRyxFQUFFLGtEQURDO0FBRU5DLElBQUFBLElBQUksRUFBRTtBQUZBLEdBVEk7QUFhWkcsRUFBQUEsTUFBTSxFQUFFO0FBQ05KLElBQUFBLEdBQUcsRUFBRSxDQUNILGlCQURHLEVBRUgscUNBRkcsRUFHSCwwQ0FIRyxDQURDO0FBTU5DLElBQUFBLElBQUksRUFBRTtBQU5BO0FBYkksQ0FBZDs7QUF1Qk8sSUFBTUksS0FBSyxHQUFHLFNBQVJBLEtBQVEsQ0FBQUMsSUFBSSxFQUFJO0FBQzNCLFNBQU8sa0JBQUksQ0FBQyxNQUFELENBQUosQ0FBUDtBQUNBQSxFQUFBQSxJQUFJO0FBQ0wsQ0FITTs7OztBQUtBLElBQU1QLE1BQU0sR0FBRyxTQUFUQSxNQUFTLEdBQU07QUFDMUIsU0FBT1EsY0FDSlAsR0FESSxDQUNBRixLQUFLLENBQUNDLE1BQU4sQ0FBYUMsR0FEYixFQUVKUSxJQUZJLENBRUMscUJBQU8sQ0FBQ2QsVUFBUixFQUFvQmUsd0JBQVdDLElBQVgsRUFBcEIsQ0FGRCxFQUdKRixJQUhJLENBR0MsMkJBSEQsRUFJSkEsSUFKSSxDQUlDLHdCQUpELEVBS0pBLElBTEksQ0FLQyxxQkFBT2QsVUFBUCxFQUFtQiwyQkFBUztBQUFFaUIsSUFBQUEsYUFBYSxFQUFFO0FBQWpCLEdBQVQsQ0FBbkIsQ0FMRCxFQU1KSCxJQU5JLENBTUMscUJBQU8sQ0FBQ2QsVUFBUixFQUFvQmUsd0JBQVdHLEtBQVgsRUFBcEIsQ0FORCxFQU9KSixJQVBJLENBT0NELGNBQUtOLElBQUwsQ0FBVUgsS0FBSyxDQUFDQyxNQUFOLENBQWFFLElBQXZCLENBUEQsQ0FBUDtBQVFELENBVE07Ozs7QUFXQSxJQUFNRSxNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFNO0FBQzFCLFNBQU9JLGNBQ0pQLEdBREksQ0FDQUYsS0FBSyxDQUFDSyxNQUFOLENBQWFILEdBRGIsRUFFSlEsSUFGSSxDQUVDLHFCQUFPZCxVQUFQLEVBQW1CLDRCQUFuQixDQUZELEVBR0pjLElBSEksQ0FHQ0QsY0FBS04sSUFBTCxDQUFVSCxLQUFLLENBQUNLLE1BQU4sQ0FBYUYsSUFBdkIsQ0FIRCxDQUFQO0FBSUQsQ0FMTTs7OztBQU9BLElBQU1ZLElBQUksR0FBRyxTQUFQQSxJQUFPLEdBQU07QUFDeEIsU0FBT04sY0FBS1AsR0FBTCxDQUFTRixLQUFLLENBQUNNLE1BQU4sQ0FBYUosR0FBdEIsRUFBMkJRLElBQTNCLENBQWdDRCxjQUFLTixJQUFMLENBQVVILEtBQUssQ0FBQ00sTUFBTixDQUFhSCxJQUF2QixDQUFoQyxDQUFQO0FBQ0QsQ0FGTTs7OztBQUlBLElBQU1hLEtBQUssR0FBRyxTQUFSQSxLQUFRLEdBQU07QUFDekJQLGdCQUFLTyxLQUFMLENBQVcsNkJBQVgsRUFBMENmLE1BQTFDOztBQUNBUSxnQkFBS08sS0FBTCxDQUFXaEIsS0FBSyxDQUFDSyxNQUFOLENBQWFILEdBQXhCLEVBQTZCRyxNQUE3Qjs7QUFDQUksZ0JBQUtPLEtBQUwsQ0FBV2hCLEtBQUssQ0FBQ00sTUFBTixDQUFhSixHQUF4QixFQUE2QmEsSUFBN0I7QUFDRCxDQUpNOzs7O0FBTUEsSUFBTUUsR0FBRyxHQUFHUixjQUFLUyxNQUFMLENBQ2pCWCxLQURpQixFQUVqQkUsY0FBS1UsUUFBTCxDQUFjbEIsTUFBZCxFQUFzQkksTUFBdEIsRUFBOEJVLElBQTlCLENBRmlCLEVBR2pCQyxLQUhpQixDQUFaOzs7O0FBS0EsSUFBTUksS0FBSyxHQUFHWCxjQUFLUyxNQUFMLENBQVlYLEtBQVosRUFBbUJFLGNBQUtVLFFBQUwsQ0FBY2xCLE1BQWQsRUFBc0JJLE1BQXRCLEVBQThCVSxJQUE5QixDQUFuQixDQUFkOzs7ZUFFUUUsRyIsInNvdXJjZVJvb3QiOiIvVXNlcnMvdmFsZXJpb2xlb25hcmRvL0xvY2FsIFNpdGVzL3ZhbGVvL2FwcC9wdWJsaWMvd3AtY29udGVudC90aGVtZXMvdmFsZW8tc2Vydmljb3MtZmluYWwiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3VscCBmcm9tIFwiZ3VscFwiO1xuaW1wb3J0IHlhcmdzIGZyb20gXCJ5YXJnc1wiO1xuaW1wb3J0IHBsdW1iZXIgZnJvbSBcImd1bHAtcGx1bWJlclwiO1xuaW1wb3J0IGxlc3MgZnJvbSBcImd1bHAtbGVzc1wiO1xuaW1wb3J0IGNsZWFuQ1NTIGZyb20gXCJndWxwLWNsZWFuLWNzc1wiO1xuaW1wb3J0IGd1bHBpZiBmcm9tIFwiZ3VscC1pZlwiO1xuaW1wb3J0IHNvdXJjZW1hcHMgZnJvbSBcImd1bHAtc291cmNlbWFwc1wiO1xuaW1wb3J0IGltYWdlbWluIGZyb20gXCJndWxwLWltYWdlbWluXCI7XG5pbXBvcnQgZGVsIGZyb20gXCJkZWxcIjtcblxuY29uc3QgUFJPRFVDVElPTiA9IHlhcmdzLmFyZ3YucHJvZDtcblxuY29uc3QgcGF0aHMgPSB7XG4gIHN0eWxlczoge1xuICAgIHNyYzogXCJzcmMvYXNzZXRzL3N0eWxlcy9idW5kbGUubGVzc1wiLFxuICAgIGRlc3Q6IFwiZGlzdC9hc3NldHMvc3R5bGVzL1wiXG4gIH0sXG4gIHNjcmlwdHM6IHtcbiAgICBzcmM6IFwic3JjL2Fzc2V0cy9zY3JpcHRzLyoqLyouanNcIixcbiAgICBkZXN0OiBcImRpc3QvYXNzZXRzL3NjcmlwdHMvXCJcbiAgfSxcbiAgaW1hZ2VzOiB7XG4gICAgc3JjOiBcInNyYy9hc3NldHMvaW1hZ2VzLyoqLyoqLyoue2pwZyxqcGVnLHBuZyxzdmcsZ2lmfVwiLFxuICAgIGRlc3Q6IFwiZGlzdC9hc3NldHMvaW1hZ2VzL1wiXG4gIH0sXG4gIG90aGVyczoge1xuICAgIHNyYzogW1xuICAgICAgXCJzcmMvYXNzZXRzLyoqLypcIixcbiAgICAgIFwiIXNyYy9hc3NldHMve2ltYWdlcy9zY3JpcHRzLHN0eWxlc31cIixcbiAgICAgIFwiIXNyYy9hc3NldHMve2ltYWdlcy9zY3JpcHRzLHN0eWxlc30vKiovKlwiXG4gICAgXSxcbiAgICBkZXN0OiBcImRpc3QvYXNzZXRzXCJcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGNsZWFuID0gZG9uZSA9PiB7XG4gIHJldHVybiBkZWwoW1wiZGlzdFwiXSk7XG4gIGRvbmUoKTtcbn07XG5cbmV4cG9ydCBjb25zdCBzdHlsZXMgPSAoKSA9PiB7XG4gIHJldHVybiBndWxwXG4gICAgLnNyYyhwYXRocy5zdHlsZXMuc3JjKVxuICAgIC5waXBlKGd1bHBpZighUFJPRFVDVElPTiwgc291cmNlbWFwcy5pbml0KCkpKVxuICAgIC5waXBlKHBsdW1iZXIoKSlcbiAgICAucGlwZShsZXNzKCkpXG4gICAgLnBpcGUoZ3VscGlmKFBST0RVQ1RJT04sIGNsZWFuQ1NTKHsgY29tcGF0aWJpbGl0eTogXCJpZThcIiB9KSkpXG4gICAgLnBpcGUoZ3VscGlmKCFQUk9EVUNUSU9OLCBzb3VyY2VtYXBzLndyaXRlKCkpKVxuICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5zdHlsZXMuZGVzdCkpO1xufTtcblxuZXhwb3J0IGNvbnN0IGltYWdlcyA9ICgpID0+IHtcbiAgcmV0dXJuIGd1bHBcbiAgICAuc3JjKHBhdGhzLmltYWdlcy5zcmMpXG4gICAgLnBpcGUoZ3VscGlmKFBST0RVQ1RJT04sIGltYWdlbWluKCkpKVxuICAgIC5waXBlKGd1bHAuZGVzdChwYXRocy5pbWFnZXMuZGVzdCkpO1xufTtcblxuZXhwb3J0IGNvbnN0IGNvcHkgPSAoKSA9PiB7XG4gIHJldHVybiBndWxwLnNyYyhwYXRocy5vdGhlcnMuc3JjKS5waXBlKGd1bHAuZGVzdChwYXRocy5vdGhlcnMuZGVzdCkpO1xufTtcblxuZXhwb3J0IGNvbnN0IHdhdGNoID0gKCkgPT4ge1xuICBndWxwLndhdGNoKFwic3JjL2Fzc2V0cy9zdHlsZXMvKiovKi5sZXNzXCIsIHN0eWxlcyk7XG4gIGd1bHAud2F0Y2gocGF0aHMuaW1hZ2VzLnNyYywgaW1hZ2VzKTtcbiAgZ3VscC53YXRjaChwYXRocy5vdGhlcnMuc3JjLCBjb3B5KTtcbn07XG5cbmV4cG9ydCBjb25zdCBkZXYgPSBndWxwLnNlcmllcyhcbiAgY2xlYW4sXG4gIGd1bHAucGFyYWxsZWwoc3R5bGVzLCBpbWFnZXMsIGNvcHkpLFxuICB3YXRjaFxuKTtcbmV4cG9ydCBjb25zdCBidWlsZCA9IGd1bHAuc2VyaWVzKGNsZWFuLCBndWxwLnBhcmFsbGVsKHN0eWxlcywgaW1hZ2VzLCBjb3B5KSk7XG5cbmV4cG9ydCBkZWZhdWx0IGRldjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "paths",
        "styles",
        "src",
        "dest",
        "scripts",
        "images",
        "others",
        "clean",
        "done",
        "gulp",
        "pipe",
        "sourcemaps",
        "init",
        "compatibility",
        "write",
        "copy",
        "watch",
        "dev",
        "series",
        "parallel",
        "build"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,GAAGC,eAAMC,IAAN,CAAWC,IAA9B;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,+BADC;AAENC,IAAAA,IAAI,EAAE;AAFA,GADI;AAKZC,EAAAA,OAAO,EAAE;AACPF,IAAAA,GAAG,EAAE,4BADE;AAEPC,IAAAA,IAAI,EAAE;AAFC,GALG;AASZE,EAAAA,MAAM,EAAE;AACNH,IAAAA,GAAG,EAAE,kDADC;AAENC,IAAAA,IAAI,EAAE;AAFA,GATI;AAaZG,EAAAA,MAAM,EAAE;AACNJ,IAAAA,GAAG,EAAE,CACH,iBADG,EAEH,qCAFG,EAGH,0CAHG,CADC;AAMNC,IAAAA,IAAI,EAAE;AANA;AAbI,CAAd;;AAuBO,IAAMI,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI,EAAI;AAC3B,SAAO,kBAAI,CAAC,MAAD,CAAJ,CAAP;AACAA,EAAAA,IAAI;AACL,CAHM;;;;AAKA,IAAMP,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAOQ,cACJP,GADI,CACAF,KAAK,CAACC,MAAN,CAAaC,GADb,EAEJQ,IAFI,CAEC,qBAAO,CAACd,UAAR,EAAoBe,wBAAWC,IAAX,EAApB,CAFD,EAGJF,IAHI,CAGC,2BAHD,EAIJA,IAJI,CAIC,wBAJD,EAKJA,IALI,CAKC,qBAAOd,UAAP,EAAmB,2BAAS;AAAEiB,IAAAA,aAAa,EAAE;AAAjB,GAAT,CAAnB,CALD,EAMJH,IANI,CAMC,qBAAO,CAACd,UAAR,EAAoBe,wBAAWG,KAAX,EAApB,CAND,EAOJJ,IAPI,CAOCD,cAAKN,IAAL,CAAUH,KAAK,CAACC,MAAN,CAAaE,IAAvB,CAPD,CAAP;AAQD,CATM;;;;AAWA,IAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAOI,cACJP,GADI,CACAF,KAAK,CAACK,MAAN,CAAaH,GADb,EAEJQ,IAFI,CAEC,qBAAOd,UAAP,EAAmB,4BAAnB,CAFD,EAGJc,IAHI,CAGCD,cAAKN,IAAL,CAAUH,KAAK,CAACK,MAAN,CAAaF,IAAvB,CAHD,CAAP;AAID,CALM;;;;AAOA,IAAMY,IAAI,GAAG,SAAPA,IAAO,GAAM;AACxB,SAAON,cAAKP,GAAL,CAASF,KAAK,CAACM,MAAN,CAAaJ,GAAtB,EAA2BQ,IAA3B,CAAgCD,cAAKN,IAAL,CAAUH,KAAK,CAACM,MAAN,CAAaH,IAAvB,CAAhC,CAAP;AACD,CAFM;;;;AAIA,IAAMa,KAAK,GAAG,SAARA,KAAQ,GAAM;AACzBP,gBAAKO,KAAL,CAAW,6BAAX,EAA0Cf,MAA1C;;AACAQ,gBAAKO,KAAL,CAAWhB,KAAK,CAACK,MAAN,CAAaH,GAAxB,EAA6BG,MAA7B;;AACAI,gBAAKO,KAAL,CAAWhB,KAAK,CAACM,MAAN,CAAaJ,GAAxB,EAA6Ba,IAA7B;AACD,CAJM;;;;AAMA,IAAME,GAAG,GAAGR,cAAKS,MAAL,CACjBX,KADiB,EAEjBE,cAAKU,QAAL,CAAclB,MAAd,EAAsBI,MAAtB,EAA8BU,IAA9B,CAFiB,EAGjBC,KAHiB,CAAZ;;;;AAKA,IAAMI,KAAK,GAAGX,cAAKS,MAAL,CAAYX,KAAZ,EAAmBE,cAAKU,QAAL,CAAclB,MAAd,EAAsBI,MAAtB,EAA8BU,IAA9B,CAAnB,CAAd;;;eAEQE,G",
      "sourceRoot": "/Users/valerioleonardo/Local Sites/valeo/app/public/wp-content/themes/valeo-servicos-final",
      "sourcesContent": [
        "import gulp from \"gulp\";\nimport yargs from \"yargs\";\nimport plumber from \"gulp-plumber\";\nimport less from \"gulp-less\";\nimport cleanCSS from \"gulp-clean-css\";\nimport gulpif from \"gulp-if\";\nimport sourcemaps from \"gulp-sourcemaps\";\nimport imagemin from \"gulp-imagemin\";\nimport del from \"del\";\n\nconst PRODUCTION = yargs.argv.prod;\n\nconst paths = {\n  styles: {\n    src: \"src/assets/styles/bundle.less\",\n    dest: \"dist/assets/styles/\"\n  },\n  scripts: {\n    src: \"src/assets/scripts/**/*.js\",\n    dest: \"dist/assets/scripts/\"\n  },\n  images: {\n    src: \"src/assets/images/**/**/*.{jpg,jpeg,png,svg,gif}\",\n    dest: \"dist/assets/images/\"\n  },\n  others: {\n    src: [\n      \"src/assets/**/*\",\n      \"!src/assets/{images/scripts,styles}\",\n      \"!src/assets/{images/scripts,styles}/**/*\"\n    ],\n    dest: \"dist/assets\"\n  }\n};\n\nexport const clean = done => {\n  return del([\"dist\"]);\n  done();\n};\n\nexport const styles = () => {\n  return gulp\n    .src(paths.styles.src)\n    .pipe(gulpif(!PRODUCTION, sourcemaps.init()))\n    .pipe(plumber())\n    .pipe(less())\n    .pipe(gulpif(PRODUCTION, cleanCSS({ compatibility: \"ie8\" })))\n    .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\n    .pipe(gulp.dest(paths.styles.dest));\n};\n\nexport const images = () => {\n  return gulp\n    .src(paths.images.src)\n    .pipe(gulpif(PRODUCTION, imagemin()))\n    .pipe(gulp.dest(paths.images.dest));\n};\n\nexport const copy = () => {\n  return gulp.src(paths.others.src).pipe(gulp.dest(paths.others.dest));\n};\n\nexport const watch = () => {\n  gulp.watch(\"src/assets/styles/**/*.less\", styles);\n  gulp.watch(paths.images.src, images);\n  gulp.watch(paths.others.src, copy);\n};\n\nexport const dev = gulp.series(\n  clean,\n  gulp.parallel(styles, images, copy),\n  watch\n);\nexport const build = gulp.series(clean, gulp.parallel(styles, images, copy));\n\nexport default dev;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569855952566
  }
}